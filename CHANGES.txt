Changelog for SimPy
===================

3.0.3 – 2014-04-06
------------------

- [NEW] Guide to SimPy basics.
- [NEW] Guide to SimPy Environments.
- [FIX] Timing problems with real time simulation on Windows (issue #46).
- [FIX] Installation problems on Windows due to Unicode errors (issue #41).
- [FIX] Minor documentation issues.


3.0.2 – 2013-10-24
------------------

- [FIX] The default capacity for ``Container`` and ``FilterStore`` is now also
  ``inf``.


3.0.1 – 2013-10-24
------------------

- [FIX] Documentation and default parameters of ``Store`` didn't match. Its
  default capacity is now ``inf``.


3.0 – 2013-10-11
----------------

SimPy 3 has been completely rewritten from scratch. Our main goals were to
simplify the API and code base as well as making SimPy more flexible and
extensible. Some of the most important changes are:

- Stronger focus on events. Processes yield event instances and are suspended
  until the event is triggered. An example for an event is a *timeout*
  (formerly known as *hold*), but even processes are now events, too (you can
  wait until a process terminates).

- Events can be combined with ``&`` (and) and ``|`` (or) to create
  *condition events*.

- Process can now be defined by any generator function. You don't have to
  subclass ``Process`` anymore.

- No more global simulation state. Every simulation stores its state in an
  *environment* which is comparable to the old ``Simulation`` class.

- Improved resource system with newly added resource types.

- Removed plotting and GUI capabilities. `Pyside`__ and `matplotlib`__ are much
  better with this.

- Greatly improved test suite. Its cleaner, and the tests are shorter and more
  numerous.

- Completely overhauled documentation.

There is a `guide for porting from SimPy 2 to SimPy 3`__. If you want to stick
to SimPy 2 for a while, change your requirements to ``'SimPy>=2.3,<3'``.

All in all, SimPy has become a framework for asynchronous programming based on
coroutines. It brings more than ten years of experience and scientific know-how
in the field of event-discrete simulation to the world of asynchronous
programming and should thus be a solid foundation for everything based on an
event loop.

You can find information about older versions on the `history page`__

__ http://qt-project.org/wiki/PySide
__ http://matplotlib.org/
__ https://simpy.readthedocs.org/en/latest/topical_guides/porting_from_simpy2.html
__ https://simpy.readthedocs.org/en/latest/about/history.html
